#!/usr/bin/env bash
# Summary: List all TeX Live versions available to ltenv
# Usage: ltenv versions [--bare] [--skip-aliases]
#
# Lists all TeX Live versions found in `$LTENV_ROOT/versions file'.

set -e
[ -n "$LTENV_DEBUG" ] && set -x

unset bare
unset skip_aliases
# Provide ltenv completions
for arg; do
  case "$arg" in
  --complete )
    echo --bare
    echo --skip-aliases
    exit ;;
  --bare ) bare=1 ;;
  --skip-aliases ) skip_aliases=1 ;;
  * )
    ltenv-help --usage versions >&2
    exit 1
    ;;
  esac
done

versions_file="${LTENV_ROOT}/versions"

if ! enable -f "${BASH_SOURCE%/*}"/../libexec/ltenv-realpath.dylib realpath 2>/dev/null; then
  if [ -n "$LTENV_NATIVE_EXT" ]; then
    echo "ltenv: failed to load \`realpath' builtin" >&2
    exit 1
  fi

  READLINK=$(type -p greadlink readlink | head -1)
  if [ -z "$READLINK" ]; then
    echo "ltenv: cannot find readlink - are you missing GNU coreutils?" >&2
    exit 1
  fi

  resolve_link() {
    $READLINK "$1"
  }

  realpath() {
    local cwd="$PWD"
    local path="$1"
    local name

    while [ -n "$path" ]; do
      name="${path##*/}"
      [ "$name" = "$path" ] || cd "${path%/*}"
      path="$(resolve_link "$name" || true)"
    done

    echo "${PWD}/$name"
    cd "$cwd"
  }
fi

if [ -f "$versions_file" ]; then
  versions_file="$(realpath "$versions_file")"
fi


if [ -n "$bare" ]; then
  hit_prefix=""
  miss_prefix=""
  current_version=""
  include_system=""
else
  hit_prefix="* "
  miss_prefix="  "
  current_version="$(ltenv-version-name || true)"
  include_system="1"
fi

num_versions=0

print_version() {
  if [ "$1" == "$current_version" ]; then
    echo "${hit_prefix}$(ltenv-version 2>/dev/null)"
  else
    echo "${miss_prefix}$1"
  fi
  num_versions=$((num_versions + 1))
}

# Include "system" in the non-bare output, if it exists
if [ -n "$include_system" ] && LTENV_VERSION=system ltenv-which latex >/dev/null 2>&1; then
  print_version system
fi

versions=`awk 'BEGIN { OFS = ";"; ORS = " " } $1 !~ /NAME/ { print $1  }' $versions_file`

for version in $versions; do
    print_version $version
done



if [ "$num_versions" -eq 0 ] && [ -n "$include_system" ]; then
  echo "Warning: no TeX Live detected on the system" >&2
  exit 1
fi
